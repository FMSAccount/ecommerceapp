{"dependencies":[{"name":"zustand","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":33,"index":33}}],"key":"POPvx7yS3Y3wz+S/9OAefiXNs0Q=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"useCartStore\", {\n    enumerable: true,\n    get: function () {\n      return useCartStore;\n    }\n  });\n  var _zustand = require(_dependencyMap[0], \"zustand\");\n  const useCartStore = (0, _zustand.create)((set, get) => ({\n    cart: [],\n    addToCart: product => {\n      set(state => {\n        const existingItem = state.cart.find(item => item.product.id === product.id);\n        if (existingItem) {\n          if (existingItem.quantity >= product.inventory) {\n            return state; // Don't add if exceeds inventory\n          }\n          return {\n            cart: state.cart.map(item => item.product.id === product.id ? {\n              ...item,\n              quantity: item.quantity + 1\n            } : item)\n          };\n        } else {\n          if (product.inventory === 0) {\n            return state; // Don't add if out of stock\n          }\n          return {\n            cart: [...state.cart, {\n              product,\n              quantity: 1\n            }]\n          };\n        }\n      });\n    },\n    removeFromCart: productId => {\n      set(state => ({\n        cart: state.cart.filter(item => item.product.id !== productId)\n      }));\n    },\n    updateCartQuantity: (productId, newQuantity) => {\n      if (newQuantity === 0) {\n        get().removeFromCart(productId);\n        return;\n      }\n      set(state => {\n        const product = state.cart.find(item => item.product.id === productId)?.product;\n        if (product && newQuantity > product.inventory) {\n          return state; // Don't update if exceeds inventory\n        }\n        return {\n          cart: state.cart.map(item => item.product.id === productId ? {\n            ...item,\n            quantity: newQuantity\n          } : item)\n        };\n      });\n    },\n    getCartTotal: () => {\n      const {\n        cart\n      } = get();\n      return cart.reduce((sum, item) => sum + item.product.price * item.quantity, 0);\n    },\n    getCartItemCount: () => {\n      const {\n        cart\n      } = get();\n      return cart.reduce((sum, item) => sum + item.quantity, 0);\n    },\n    clearCart: () => {\n      set({\n        cart: []\n      });\n    }\n  }));\n});","lineCount":83,"map":[[7,2,27,0,"Object"],[7,8,27,0],[7,9,27,0,"defineProperty"],[7,23,27,0],[7,24,27,0,"exports"],[7,31,27,0],[8,4,27,0,"enumerable"],[8,14,27,0],[9,4,27,0,"get"],[9,7,27,0],[9,18,27,0,"get"],[9,19,27,0],[10,6,27,0],[10,13,27,0,"useCartStore"],[10,25,27,0],[11,4,27,0],[12,2,27,0],[13,2,1,0],[13,6,1,0,"_zustand"],[13,14,1,0],[13,17,1,0,"require"],[13,24,1,0],[13,25,1,0,"_dependencyMap"],[13,39,1,0],[14,2,27,7],[14,8,27,13,"useCartStore"],[14,20,27,25],[14,23,27,28],[14,27,27,28,"create"],[14,35,27,34],[14,36,27,34,"create"],[14,42,27,34],[14,44,27,46],[14,45,27,47,"set"],[14,48,27,50],[14,50,27,52,"get"],[14,53,27,55],[14,59,27,61],[15,4,28,2,"cart"],[15,8,28,6],[15,10,28,8],[15,12,28,10],[16,4,30,2,"addToCart"],[16,13,30,11],[16,15,30,14,"product"],[16,22,30,30],[16,26,30,35],[17,6,31,4,"set"],[17,9,31,7],[17,10,31,9,"state"],[17,15,31,14],[17,19,31,19],[18,8,32,6],[18,14,32,12,"existingItem"],[18,26,32,24],[18,29,32,27,"state"],[18,34,32,32],[18,35,32,33,"cart"],[18,39,32,37],[18,40,32,38,"find"],[18,44,32,42],[18,45,32,43,"item"],[18,49,32,47],[18,53,32,51,"item"],[18,57,32,55],[18,58,32,56,"product"],[18,65,32,63],[18,66,32,64,"id"],[18,68,32,66],[18,73,32,71,"product"],[18,80,32,78],[18,81,32,79,"id"],[18,83,32,81],[18,84,32,82],[19,8,34,6],[19,12,34,10,"existingItem"],[19,24,34,22],[19,26,34,24],[20,10,35,8],[20,14,35,12,"existingItem"],[20,26,35,24],[20,27,35,25,"quantity"],[20,35,35,33],[20,39,35,37,"product"],[20,46,35,44],[20,47,35,45,"inventory"],[20,56,35,54],[20,58,35,56],[21,12,36,10],[21,19,36,17,"state"],[21,24,36,22],[21,25,36,23],[21,26,36,24],[22,10,37,8],[23,10,38,8],[23,17,38,15],[24,12,39,10,"cart"],[24,16,39,14],[24,18,39,16,"state"],[24,23,39,21],[24,24,39,22,"cart"],[24,28,39,26],[24,29,39,27,"map"],[24,32,39,30],[24,33,39,31,"item"],[24,37,39,35],[24,41,40,12,"item"],[24,45,40,16],[24,46,40,17,"product"],[24,53,40,24],[24,54,40,25,"id"],[24,56,40,27],[24,61,40,32,"product"],[24,68,40,39],[24,69,40,40,"id"],[24,71,40,42],[24,74,41,16],[25,14,41,18],[25,17,41,21,"item"],[25,21,41,25],[26,14,41,27,"quantity"],[26,22,41,35],[26,24,41,37,"item"],[26,28,41,41],[26,29,41,42,"quantity"],[26,37,41,50],[26,40,41,53],[27,12,41,55],[27,13,41,56],[27,16,42,16,"item"],[27,20,43,10],[28,10,44,8],[28,11,44,9],[29,8,45,6],[29,9,45,7],[29,15,45,13],[30,10,46,8],[30,14,46,12,"product"],[30,21,46,19],[30,22,46,20,"inventory"],[30,31,46,29],[30,36,46,34],[30,37,46,35],[30,39,46,37],[31,12,47,10],[31,19,47,17,"state"],[31,24,47,22],[31,25,47,23],[31,26,47,24],[32,10,48,8],[33,10,49,8],[33,17,49,15],[34,12,50,10,"cart"],[34,16,50,14],[34,18,50,16],[34,19,50,17],[34,22,50,20,"state"],[34,27,50,25],[34,28,50,26,"cart"],[34,32,50,30],[34,34,50,32],[35,14,50,34,"product"],[35,21,50,41],[36,14,50,43,"quantity"],[36,22,50,51],[36,24,50,53],[37,12,50,55],[37,13,50,56],[38,10,51,8],[38,11,51,9],[39,8,52,6],[40,6,53,4],[40,7,53,5],[40,8,53,6],[41,4,54,2],[41,5,54,3],[42,4,56,2,"removeFromCart"],[42,18,56,16],[42,20,56,19,"productId"],[42,29,56,36],[42,33,56,41],[43,6,57,4,"set"],[43,9,57,7],[43,10,57,9,"state"],[43,15,57,14],[43,20,57,20],[44,8,58,6,"cart"],[44,12,58,10],[44,14,58,12,"state"],[44,19,58,17],[44,20,58,18,"cart"],[44,24,58,22],[44,25,58,23,"filter"],[44,31,58,29],[44,32,58,30,"item"],[44,36,58,34],[44,40,58,38,"item"],[44,44,58,42],[44,45,58,43,"product"],[44,52,58,50],[44,53,58,51,"id"],[44,55,58,53],[44,60,58,58,"productId"],[44,69,58,67],[45,6,59,4],[45,7,59,5],[45,8,59,6],[45,9,59,7],[46,4,60,2],[46,5,60,3],[47,4,62,2,"updateCartQuantity"],[47,22,62,20],[47,24,62,22,"updateCartQuantity"],[47,25,62,23,"productId"],[47,34,62,40],[47,36,62,42,"newQuantity"],[47,47,62,61],[47,52,62,66],[48,6,63,4],[48,10,63,8,"newQuantity"],[48,21,63,19],[48,26,63,24],[48,27,63,25],[48,29,63,27],[49,8,64,6,"get"],[49,11,64,9],[49,12,64,10],[49,13,64,11],[49,14,64,12,"removeFromCart"],[49,28,64,26],[49,29,64,27,"productId"],[49,38,64,36],[49,39,64,37],[50,8,65,6],[51,6,66,4],[52,6,68,4,"set"],[52,9,68,7],[52,10,68,9,"state"],[52,15,68,14],[52,19,68,19],[53,8,69,6],[53,14,69,12,"product"],[53,21,69,19],[53,24,69,22,"state"],[53,29,69,27],[53,30,69,28,"cart"],[53,34,69,32],[53,35,69,33,"find"],[53,39,69,37],[53,40,69,38,"item"],[53,44,69,42],[53,48,69,46,"item"],[53,52,69,50],[53,53,69,51,"product"],[53,60,69,58],[53,61,69,59,"id"],[53,63,69,61],[53,68,69,66,"productId"],[53,77,69,75],[53,78,69,76],[53,80,69,78,"product"],[53,87,69,85],[54,8,70,6],[54,12,70,10,"product"],[54,19,70,17],[54,23,70,21,"newQuantity"],[54,34,70,32],[54,37,70,35,"product"],[54,44,70,42],[54,45,70,43,"inventory"],[54,54,70,52],[54,56,70,54],[55,10,71,8],[55,17,71,15,"state"],[55,22,71,20],[55,23,71,21],[55,24,71,22],[56,8,72,6],[57,8,74,6],[57,15,74,13],[58,10,75,8,"cart"],[58,14,75,12],[58,16,75,14,"state"],[58,21,75,19],[58,22,75,20,"cart"],[58,26,75,24],[58,27,75,25,"map"],[58,30,75,28],[58,31,75,29,"item"],[58,35,75,33],[58,39,76,10,"item"],[58,43,76,14],[58,44,76,15,"product"],[58,51,76,22],[58,52,76,23,"id"],[58,54,76,25],[58,59,76,30,"productId"],[58,68,76,39],[58,71,77,14],[59,12,77,16],[59,15,77,19,"item"],[59,19,77,23],[60,12,77,25,"quantity"],[60,20,77,33],[60,22,77,35,"newQuantity"],[61,10,77,47],[61,11,77,48],[61,14,78,14,"item"],[61,18,79,8],[62,8,80,6],[62,9,80,7],[63,6,81,4],[63,7,81,5],[63,8,81,6],[64,4,82,2],[64,5,82,3],[65,4,84,2,"getCartTotal"],[65,16,84,14],[65,18,84,16,"getCartTotal"],[65,19,84,16],[65,24,84,22],[66,6,85,4],[66,12,85,10],[67,8,85,12,"cart"],[68,6,85,17],[68,7,85,18],[68,10,85,21,"get"],[68,13,85,24],[68,14,85,25],[68,15,85,26],[69,6,86,4],[69,13,86,11,"cart"],[69,17,86,15],[69,18,86,16,"reduce"],[69,24,86,22],[69,25,86,23],[69,26,86,24,"sum"],[69,29,86,27],[69,31,86,29,"item"],[69,35,86,33],[69,40,86,38,"sum"],[69,43,86,41],[69,46,86,45,"item"],[69,50,86,49],[69,51,86,50,"product"],[69,58,86,57],[69,59,86,58,"price"],[69,64,86,63],[69,67,86,66,"item"],[69,71,86,70],[69,72,86,71,"quantity"],[69,80,86,80],[69,82,86,82],[69,83,86,83],[69,84,86,84],[70,4,87,2],[70,5,87,3],[71,4,89,2,"getCartItemCount"],[71,20,89,18],[71,22,89,20,"getCartItemCount"],[71,23,89,20],[71,28,89,26],[72,6,90,4],[72,12,90,10],[73,8,90,12,"cart"],[74,6,90,17],[74,7,90,18],[74,10,90,21,"get"],[74,13,90,24],[74,14,90,25],[74,15,90,26],[75,6,91,4],[75,13,91,11,"cart"],[75,17,91,15],[75,18,91,16,"reduce"],[75,24,91,22],[75,25,91,23],[75,26,91,24,"sum"],[75,29,91,27],[75,31,91,29,"item"],[75,35,91,33],[75,40,91,38,"sum"],[75,43,91,41],[75,46,91,44,"item"],[75,50,91,48],[75,51,91,49,"quantity"],[75,59,91,57],[75,61,91,59],[75,62,91,60],[75,63,91,61],[76,4,92,2],[76,5,92,3],[77,4,94,2,"clearCart"],[77,13,94,11],[77,15,94,13,"clearCart"],[77,16,94,13],[77,21,94,19],[78,6,95,4,"set"],[78,9,95,7],[78,10,95,8],[79,8,95,10,"cart"],[79,12,95,14],[79,14,95,16],[80,6,95,19],[80,7,95,20],[80,8,95,21],[81,4,96,2],[82,2,97,0],[82,3,97,1],[82,4,97,2],[82,5,97,3],[83,0,97,4],[83,3]],"functionMap":{"names":["<global>","create$argument_0","addToCart","set$argument_0","state.cart.find$argument_0","state.cart.map$argument_0","removeFromCart","state.cart.filter$argument_0","updateCartQuantity","getCartTotal","cart.reduce$argument_0","getCartItemCount","clearCart"],"mappings":"AAA;8CC0B;aCG;QCC;2CCC,sCD;+BEO;oBFG;KDW;GDC;kBKE;QHC;8BIC,qCJ;MGC;GLC;sBOE;QLM;sCCC,qCD;6BEM;kBFG;KKG;GPC;gBQE;uBCE,yDD;GRC;oBUE;uBDE,kCC;GVC;aWE;GXE;EDC"},"hasCjsExports":false},"type":"js/module"}]}