{"dependencies":[{"name":"zustand","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":33,"index":33}}],"key":"POPvx7yS3Y3wz+S/9OAefiXNs0Q=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"useCartStore\", {\n    enumerable: true,\n    get: function () {\n      return useCartStore;\n    }\n  });\n  var _zustand = require(_dependencyMap[0], \"zustand\");\n  const useCartStore = (0, _zustand.create)((set, get) => ({\n    cart: [],\n    addToCart: product => {\n      set(state => {\n        const existingItem = state.cart.find(item => item.product.id === product.id);\n        if (existingItem) {\n          if (existingItem.quantity >= product.inventory) {\n            return state; // Don't add if exceeds inventory\n          }\n          return {\n            cart: state.cart.map(item => item.product.id === product.id ? Object.assign({}, item, {\n              quantity: item.quantity + 1\n            }) : item)\n          };\n        } else {\n          if (product.inventory === 0) {\n            return state; // Don't add if out of stock\n          }\n          return {\n            cart: [...state.cart, {\n              product,\n              quantity: 1\n            }]\n          };\n        }\n      });\n    },\n    removeFromCart: productId => {\n      set(state => ({\n        cart: state.cart.filter(item => item.product.id !== productId)\n      }));\n    },\n    updateCartQuantity: (productId, newQuantity) => {\n      if (newQuantity === 0) {\n        get().removeFromCart(productId);\n        return;\n      }\n      set(state => {\n        const product = state.cart.find(item => item.product.id === productId)?.product;\n        if (product && newQuantity > product.inventory) {\n          return state; // Don't update if exceeds inventory\n        }\n        return {\n          cart: state.cart.map(item => item.product.id === productId ? Object.assign({}, item, {\n            quantity: newQuantity\n          }) : item)\n        };\n      });\n    },\n    getCartTotal: () => {\n      const {\n        cart\n      } = get();\n      return cart.reduce((sum, item) => sum + item.product.price * item.quantity, 0);\n    },\n    getCartItemCount: () => {\n      const {\n        cart\n      } = get();\n      return cart.reduce((sum, item) => sum + item.quantity, 0);\n    },\n    clearCart: () => {\n      set({\n        cart: []\n      });\n    }\n  }));\n});","lineCount":81,"map":[[7,2,27,0,"Object"],[7,8,27,0],[7,9,27,0,"defineProperty"],[7,23,27,0],[7,24,27,0,"exports"],[7,31,27,0],[8,4,27,0,"enumerable"],[8,14,27,0],[9,4,27,0,"get"],[9,7,27,0],[9,18,27,0,"get"],[9,19,27,0],[10,6,27,0],[10,13,27,0,"useCartStore"],[10,25,27,0],[11,4,27,0],[12,2,27,0],[13,2,1,0],[13,6,1,0,"_zustand"],[13,14,1,0],[13,17,1,0,"require"],[13,24,1,0],[13,25,1,0,"_dependencyMap"],[13,39,1,0],[14,2,27,7],[14,8,27,13,"useCartStore"],[14,20,27,25],[14,23,27,28],[14,27,27,28,"create"],[14,35,27,34],[14,36,27,34,"create"],[14,42,27,34],[14,44,27,46],[14,45,27,47,"set"],[14,48,27,50],[14,50,27,52,"get"],[14,53,27,55],[14,59,27,61],[15,4,28,2,"cart"],[15,8,28,6],[15,10,28,8],[15,12,28,10],[16,4,30,2,"addToCart"],[16,13,30,11],[16,15,30,14,"product"],[16,22,30,30],[16,26,30,35],[17,6,31,4,"set"],[17,9,31,7],[17,10,31,9,"state"],[17,15,31,14],[17,19,31,19],[18,8,32,6],[18,14,32,12,"existingItem"],[18,26,32,24],[18,29,32,27,"state"],[18,34,32,32],[18,35,32,33,"cart"],[18,39,32,37],[18,40,32,38,"find"],[18,44,32,42],[18,45,32,43,"item"],[18,49,32,47],[18,53,32,51,"item"],[18,57,32,55],[18,58,32,56,"product"],[18,65,32,63],[18,66,32,64,"id"],[18,68,32,66],[18,73,32,71,"product"],[18,80,32,78],[18,81,32,79,"id"],[18,83,32,81],[18,84,32,82],[19,8,34,6],[19,12,34,10,"existingItem"],[19,24,34,22],[19,26,34,24],[20,10,35,8],[20,14,35,12,"existingItem"],[20,26,35,24],[20,27,35,25,"quantity"],[20,35,35,33],[20,39,35,37,"product"],[20,46,35,44],[20,47,35,45,"inventory"],[20,56,35,54],[20,58,35,56],[21,12,36,10],[21,19,36,17,"state"],[21,24,36,22],[21,25,36,23],[21,26,36,24],[22,10,37,8],[23,10,38,8],[23,17,38,15],[24,12,39,10,"cart"],[24,16,39,14],[24,18,39,16,"state"],[24,23,39,21],[24,24,39,22,"cart"],[24,28,39,26],[24,29,39,27,"map"],[24,32,39,30],[24,33,39,31,"item"],[24,37,39,35],[24,41,40,12,"item"],[24,45,40,16],[24,46,40,17,"product"],[24,53,40,24],[24,54,40,25,"id"],[24,56,40,27],[24,61,40,32,"product"],[24,68,40,39],[24,69,40,40,"id"],[24,71,40,42],[24,74,40,42,"Object"],[24,80,40,42],[24,81,40,42,"assign"],[24,87,40,42],[24,92,41,21,"item"],[24,96,41,25],[25,14,41,27,"quantity"],[25,22,41,35],[25,24,41,37,"item"],[25,28,41,41],[25,29,41,42,"quantity"],[25,37,41,50],[25,40,41,53],[26,12,41,54],[26,17,42,16,"item"],[26,21,43,10],[27,10,44,8],[27,11,44,9],[28,8,45,6],[28,9,45,7],[28,15,45,13],[29,10,46,8],[29,14,46,12,"product"],[29,21,46,19],[29,22,46,20,"inventory"],[29,31,46,29],[29,36,46,34],[29,37,46,35],[29,39,46,37],[30,12,47,10],[30,19,47,17,"state"],[30,24,47,22],[30,25,47,23],[30,26,47,24],[31,10,48,8],[32,10,49,8],[32,17,49,15],[33,12,50,10,"cart"],[33,16,50,14],[33,18,50,16],[33,19,50,17],[33,22,50,20,"state"],[33,27,50,25],[33,28,50,26,"cart"],[33,32,50,30],[33,34,50,32],[34,14,50,34,"product"],[34,21,50,41],[35,14,50,43,"quantity"],[35,22,50,51],[35,24,50,53],[36,12,50,55],[36,13,50,56],[37,10,51,8],[37,11,51,9],[38,8,52,6],[39,6,53,4],[39,7,53,5],[39,8,53,6],[40,4,54,2],[40,5,54,3],[41,4,56,2,"removeFromCart"],[41,18,56,16],[41,20,56,19,"productId"],[41,29,56,36],[41,33,56,41],[42,6,57,4,"set"],[42,9,57,7],[42,10,57,9,"state"],[42,15,57,14],[42,20,57,20],[43,8,58,6,"cart"],[43,12,58,10],[43,14,58,12,"state"],[43,19,58,17],[43,20,58,18,"cart"],[43,24,58,22],[43,25,58,23,"filter"],[43,31,58,29],[43,32,58,30,"item"],[43,36,58,34],[43,40,58,38,"item"],[43,44,58,42],[43,45,58,43,"product"],[43,52,58,50],[43,53,58,51,"id"],[43,55,58,53],[43,60,58,58,"productId"],[43,69,58,67],[44,6,59,4],[44,7,59,5],[44,8,59,6],[44,9,59,7],[45,4,60,2],[45,5,60,3],[46,4,62,2,"updateCartQuantity"],[46,22,62,20],[46,24,62,22,"updateCartQuantity"],[46,25,62,23,"productId"],[46,34,62,40],[46,36,62,42,"newQuantity"],[46,47,62,61],[46,52,62,66],[47,6,63,4],[47,10,63,8,"newQuantity"],[47,21,63,19],[47,26,63,24],[47,27,63,25],[47,29,63,27],[48,8,64,6,"get"],[48,11,64,9],[48,12,64,10],[48,13,64,11],[48,14,64,12,"removeFromCart"],[48,28,64,26],[48,29,64,27,"productId"],[48,38,64,36],[48,39,64,37],[49,8,65,6],[50,6,66,4],[51,6,68,4,"set"],[51,9,68,7],[51,10,68,9,"state"],[51,15,68,14],[51,19,68,19],[52,8,69,6],[52,14,69,12,"product"],[52,21,69,19],[52,24,69,22,"state"],[52,29,69,27],[52,30,69,28,"cart"],[52,34,69,32],[52,35,69,33,"find"],[52,39,69,37],[52,40,69,38,"item"],[52,44,69,42],[52,48,69,46,"item"],[52,52,69,50],[52,53,69,51,"product"],[52,60,69,58],[52,61,69,59,"id"],[52,63,69,61],[52,68,69,66,"productId"],[52,77,69,75],[52,78,69,76],[52,80,69,78,"product"],[52,87,69,85],[53,8,70,6],[53,12,70,10,"product"],[53,19,70,17],[53,23,70,21,"newQuantity"],[53,34,70,32],[53,37,70,35,"product"],[53,44,70,42],[53,45,70,43,"inventory"],[53,54,70,52],[53,56,70,54],[54,10,71,8],[54,17,71,15,"state"],[54,22,71,20],[54,23,71,21],[54,24,71,22],[55,8,72,6],[56,8,74,6],[56,15,74,13],[57,10,75,8,"cart"],[57,14,75,12],[57,16,75,14,"state"],[57,21,75,19],[57,22,75,20,"cart"],[57,26,75,24],[57,27,75,25,"map"],[57,30,75,28],[57,31,75,29,"item"],[57,35,75,33],[57,39,76,10,"item"],[57,43,76,14],[57,44,76,15,"product"],[57,51,76,22],[57,52,76,23,"id"],[57,54,76,25],[57,59,76,30,"productId"],[57,68,76,39],[57,71,76,39,"Object"],[57,77,76,39],[57,78,76,39,"assign"],[57,84,76,39],[57,89,77,19,"item"],[57,93,77,23],[58,12,77,25,"quantity"],[58,20,77,33],[58,22,77,35,"newQuantity"],[59,10,77,46],[59,15,78,14,"item"],[59,19,79,8],[60,8,80,6],[60,9,80,7],[61,6,81,4],[61,7,81,5],[61,8,81,6],[62,4,82,2],[62,5,82,3],[63,4,84,2,"getCartTotal"],[63,16,84,14],[63,18,84,16,"getCartTotal"],[63,19,84,16],[63,24,84,22],[64,6,85,4],[64,12,85,10],[65,8,85,12,"cart"],[66,6,85,17],[66,7,85,18],[66,10,85,21,"get"],[66,13,85,24],[66,14,85,25],[66,15,85,26],[67,6,86,4],[67,13,86,11,"cart"],[67,17,86,15],[67,18,86,16,"reduce"],[67,24,86,22],[67,25,86,23],[67,26,86,24,"sum"],[67,29,86,27],[67,31,86,29,"item"],[67,35,86,33],[67,40,86,38,"sum"],[67,43,86,41],[67,46,86,45,"item"],[67,50,86,49],[67,51,86,50,"product"],[67,58,86,57],[67,59,86,58,"price"],[67,64,86,63],[67,67,86,66,"item"],[67,71,86,70],[67,72,86,71,"quantity"],[67,80,86,80],[67,82,86,82],[67,83,86,83],[67,84,86,84],[68,4,87,2],[68,5,87,3],[69,4,89,2,"getCartItemCount"],[69,20,89,18],[69,22,89,20,"getCartItemCount"],[69,23,89,20],[69,28,89,26],[70,6,90,4],[70,12,90,10],[71,8,90,12,"cart"],[72,6,90,17],[72,7,90,18],[72,10,90,21,"get"],[72,13,90,24],[72,14,90,25],[72,15,90,26],[73,6,91,4],[73,13,91,11,"cart"],[73,17,91,15],[73,18,91,16,"reduce"],[73,24,91,22],[73,25,91,23],[73,26,91,24,"sum"],[73,29,91,27],[73,31,91,29,"item"],[73,35,91,33],[73,40,91,38,"sum"],[73,43,91,41],[73,46,91,44,"item"],[73,50,91,48],[73,51,91,49,"quantity"],[73,59,91,57],[73,61,91,59],[73,62,91,60],[73,63,91,61],[74,4,92,2],[74,5,92,3],[75,4,94,2,"clearCart"],[75,13,94,11],[75,15,94,13,"clearCart"],[75,16,94,13],[75,21,94,19],[76,6,95,4,"set"],[76,9,95,7],[76,10,95,8],[77,8,95,10,"cart"],[77,12,95,14],[77,14,95,16],[78,6,95,19],[78,7,95,20],[78,8,95,21],[79,4,96,2],[80,2,97,0],[80,3,97,1],[80,4,97,2],[80,5,97,3],[81,0,97,4],[81,3]],"functionMap":{"names":["<global>","create$argument_0","addToCart","set$argument_0","state.cart.find$argument_0","state.cart.map$argument_0","removeFromCart","state.cart.filter$argument_0","updateCartQuantity","getCartTotal","cart.reduce$argument_0","getCartItemCount","clearCart"],"mappings":"AAA;8CC0B;aCG;QCC;2CCC,sCD;+BEO;oBFG;KDW;GDC;kBKE;QHC;8BIC,qCJ;MGC;GLC;sBOE;QLM;sCCC,qCD;6BEM;kBFG;KKG;GPC;gBQE;uBCE,yDD;GRC;oBUE;uBDE,kCC;GVC;aWE;GXE;EDC"},"hasCjsExports":false},"type":"js/module"}]}